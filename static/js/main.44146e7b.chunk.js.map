{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/coins-list/coins-list.component.jsx","components/coins/coins.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","customer","id","username","email","website","CardList","customers","map","CoinsList","name","image","symbol","price","volume","priceChange","marketcap","toLocaleString","toFixed","Coins","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","market_cap","current_price","price_change_percentage_24h","total_volume","App","changeToCustomers","state","displayCoins","setState","displayCustomers","changeToCoins","fetch","response","json","users","onClick","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44146e7b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card-styles.css';\n\nexport const Card = (props) => (\n  <div className='card-container'>\n    <img alt=\"user\" src={`https://i.pravatar.cc/200?img=${props.customer.id + 10}`} /> \n    {/* Added a +10 at the end as there were some children amongst the first pictures */}\n    <h2> {props.customer.username} </h2>\n    <p> {props.customer.email} </p>\n    {/* As I'm not able to create my own API I'm using their email adresses as fake coins */}\n    <p> Favorite coin: {props.customer.website}</p> \n  </div>\n)","import React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n  <div className='card-list'>\n      {props.customers.map(customer => ( \n        <Card key={customer.id} customer={customer}/>\n      ))}\n  </div>\n)","import React from 'react';\n\nimport './coins-list.styles.css';\n\nconst CoinsList = ({ name, image, symbol, price, volume, priceChange, marketcap }) => {\n  return (\n    <div className='coin-container'>\n      <div className=\"coin-row\">\n        <div className=\"coin\">\n          <img src={image} alt=\"crypto\"/>\n          <h1>{name}</h1>\n          <p className=\"coin-symbol\">{symbol}</p>\n        </div>\n        <div className=\"coin-data\">\n          <p className=\"coin-price\">${price}</p>\n          <p className=\"coin-volume\">${volume.toLocaleString()}</p>\n          {priceChange < 0 ? (\n            <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\n          ) : (\n            <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\n          )}\n          <p className=\"coin-marketcap\">\n            Mkt Cap: ${marketcap.toLocaleString()}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CoinsList\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport CoinsList from '../coins-list/coins-list.component';\n\nimport './coins.styles.css';\n\n\nfunction Coins() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n    .then(res => {\n      setCoins(res.data)\n    }).catch(error => console.log(error))\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n\n    return (\n      <div className='coin-app'>\n        <div className='coin-search'>\n          <h1 className=\"coin-text\">Search a coin</h1>\n          <form>\n            <input type='text' placeholder='Search' className='coin-input' onChange={handleChange} />\n          </form>\n        </div>\n        {filteredCoins.map(coin => {\n          return <CoinsList \n          key={coin.id}\n          name={coin.name}\n          image={coin.image}\n          symbol={coin.symbol}\n          marketcap={coin.market_cap}\n          price={coin.current_price}\n          priceChange={coin.price_change_percentage_24h}\n          volume={coin.total_volume}\n          />;\n        })}\n      </div>\n    )\n}\n\nexport default Coins;\n\n","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport Coins from './components/coins/coins.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      customers: [],\n      displayCustomers: true,\n      displayCoins: false,\n    };\n  }\n\n  // As I don't know anything about Django REST Framework I used this API to get fake customer information\n  // The pictures are taken from another API in the card component\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ customers: users }));\n  }\n\n  //logic to change display in container App\n  changeToCustomers = () => {\n    if(this.state.displayCoins) {\n      this.setState({\n        displayCustomers: true,\n        displayCoins: false,\n      });\n    }\n  }\n\n  changeToCoins = () => {\n    if(this.state.displayCustomers) {\n      this.setState({\n        displayCustomers: false,\n        displayCoins: true,\n      });\n    }\n  }\n\n  render() {\n    return(\n      <div className='App'>\n        <div className=\"tab-container\">\n          <button className=\"tab-button\" onClick={this.changeToCustomers}> CUSTOMERS </button>\n          <button className=\"tab-button\" onClick={this.changeToCoins}> COINS </button>\n        </div>\n        {this.state.displayCustomers ? (\n          <CardList customers={this.state.customers} />\n        ) : (\n          <Coins />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}